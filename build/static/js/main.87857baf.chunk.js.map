{"version":3,"sources":["components/screen/Home.js","store/action/postAction.js","store/action/type.js","store/action/authAction.js","store/reducers/authReducers.js","store/reducers/postReducer.js","store/reducers/rootReducer.js","store/index.js","components/screen/Profile.js","components/screen/Login.js","util/setToken.js","components/screen/Register.js","components/Navbar.js","components/screen/Post.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","maxWidth","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","small","width","spacing","height","connect","state","post","user","auth","fetchPost","dispatch","axios","get","then","type","payload","data","catch","err","console","log","likes","id","put","unlikes","deletePost","delete","comment","commentBody","deletecomment","postid","commentId","patch","postId","commentArray","props","dayjs","extend","relativeTime","classes","useState","posts","setPosts","userId","setUserId","setComment","useEffect","_id","className","length","map","Card","CardHeader","Avatar","alt","src","postedBy","profile","action","onClick","title","name","subheader","date","fromNow","photo","CardContent","Typography","variant","color","component","body","CardActions","style","borderTop","borderBottom","marginBottom","padding","disableSpacing","includes","key","margin","onSubmit","e","preventDefault","document","getElementById","value","autoComplete","placeholder","onChange","target","Spinner","animation","fetchProfile","init","profileImg","error","login","register","isAuthenticated","authReducers","Object","keys","mypost","postReducer","index","findIndex","indexpost","splice","indexpostcomment","rootReducers","combineReducers","middleware","thunk","store","createStore","compose","applyMiddleware","setName","email","setEmail","isLogged","setIsLogged","setProfile","setProfileImg","message","setMessage","setTimeout","history","useHistory","encType","method","formData","FormData","append","success","event","files","push","res","token","localStorage","setItem","getItem","defaults","headers","common","setToken","password","setPassword","setError","confirmPassword","setConfirmPassword","to","clear","submitPost","setTitle","setBody","setPhoto","App","exact","path","Home","Profile","Login","Register","CreatePost","Boolean","window","location","hostname","match","jwt","verify","decode","undefined","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.87857baf.chunk.js","sourcesContent":["import React,{useEffect, useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {fetchPost, likes, unlikes, deletePost, comment, deletecomment} from '../../store/action/postAction'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport {Spinner} from 'react-bootstrap'\r\nimport dayjs from 'dayjs'\r\nimport relativeTime from 'dayjs/plugin/relativeTime'\r\n\r\n\r\n\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n   },\r\n//   media: {\r\n//     height: ,\r\n//     paddingTop: '56.25%', // 16:9\r\n//   },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n   small: {\r\n     width: theme.spacing(3),\r\n     height: theme.spacing(3),\r\n   },\r\n}));\r\n\r\n\r\nfunction Home(props) {\r\n\r\n    dayjs.extend(relativeTime)\r\n\r\n      const classes = useStyles();\r\n\r\n\r\n\r\n    const [posts, setPosts] = useState([])\r\n    const [userId, setUserId] = useState('')\r\n    const [comment , setComment] = useState('')\r\n    \r\n\r\n    const {fetchPost} = props\r\n    useEffect(()=>{\r\n        fetchPost()               \r\n    },[])\r\n\r\n    const {post} = props.post\r\n    useEffect(()=>{\r\n        setPosts(post)\r\n    }, [post])\r\n\r\nuseEffect(()=>{\r\n    setUserId(props.user.user._id)\r\n    console.log(props.user.user._id);\r\n}, [props.user.user._id])\r\n\r\n// const handleComment=(e,id)=>{\r\n//     e.preventDefault()\r\n//     props.comment(id, comment)\r\n// }\r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n    \r\n\r\n{\r\n    posts.length > 0 ?\r\n        posts.map(post=>{\r\n            return(\r\n\r\n         <div className='my-3'>\r\n        <Card className={classes.root}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar alt=\"Cindy Baker\" src={post.postedBy.profile}/>\r\n          \r\n        }\r\n        \r\n        action={\r\n                    (post.postedBy._id === userId) ?\r\n                    <DeleteIcon className='text-danger' onClick={()=>props.deletePost(post._id)} />:null\r\n                }\r\n        title={post.postedBy.name}\r\n        subheader={dayjs(post.date).fromNow()}\r\n      />\r\n      {\r\n                    (post.photo !== 'no photo')?\r\n                    <img src={post.photo} className='card-image-top postimg'></img> : null                    \r\n                }\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {post.title}<br></br>\r\n          {post.body}\r\n        </Typography>\r\n      </CardContent>\r\n      \r\n      <CardActions style={{borderTop:'solid #dedede 1px',\r\n                          borderBottom: 'solid #dedede 1px',\r\n                          marginBottom:'5px',\r\n                           padding:'10px 0'}} disableSpacing>\r\n        \r\n\r\n        {\r\n                    (post.likes.includes(userId)) ?\r\n                    <FavoriteIcon className='text-danger ml-2' onClick={()=>props.unlikes(post._id)} />:\r\n                    <FavoriteBorderIcon className='ml-2' onClick={()=>props.likes(post._id)} />\r\n                    \r\n                }\r\n                 \r\n        <span className='mx-2'>{post.likes.length}</span>\r\n      </CardActions>\r\n      \r\n      {post.comment.map(comment=>{\r\n          return(\r\n              <p key={comment._id} className='comment ml-2 mt-2'>\r\n              <Avatar alt=\"Cindy Baker\" src={comment.user.profile} className={classes.small} />\r\n              <strong style={{margin: '0 5px'}}>{comment.user.name}</strong> {comment.commentBody}  \r\n              {(comment.user._id === userId) ?\r\n                            <span className='comment__delete'><i   onClick={()=>props.deletecomment(post._id, comment._id)} className='fa fa-trash'></i></span>\r\n                            : null\r\n\r\n              }\r\n              </p>\r\n          )\r\n        \r\n      })\r\n      }\r\n      <form onSubmit={(e)=>{\r\n          e.preventDefault()\r\n          props.comment(post._id, {commentBody:comment})\r\n          setComment('')\r\n          document.getElementById('comment').value = ''\r\n      }}>\r\n     \r\n      <div className='comment'>\r\n        <input autoComplete='off' placeholder='add a comment' className='form-control form-control-sm ml-2' id='comment' type='text' onChange={(e)=>setComment(e.target.value)}></input>\r\n      \r\n       <button className='btn ml-0' type='submit'> <i className='fa fa-send text-success'></i></button>\r\n       </div>\r\n      </form>\r\n    </Card>\r\n</div>\r\n   )\r\n   }): <><Spinner animation='border' /></>\r\n\r\n}\r\n</div>\r\n    )\r\n}\r\nconst mapStateToProps = state =>({\r\n    post: state.post,\r\n    user: state.auth\r\n})\r\nexport default connect(mapStateToProps, {fetchPost, likes, unlikes, deletePost, comment, deletecomment})(Home)\r\n","import {FETCH_POSTS, POST_ERROR, MY_POST, FETCH_LIKE, DELETE_POST, FETCH_COMMENT}  from './type'\r\nimport axios from 'axios'\r\n\r\nexport const fetchPost = ()=>dispatch=>{\r\naxios.get('/posts/getall')\r\n.then(user=>{\r\n    dispatch({\r\n        type: FETCH_POSTS,\r\n        payload: {\r\n            post: user.data.post\r\n        }\r\n    })\r\n    \r\n})\r\n.catch(err=>console.log(err)\r\n)\r\n}\r\n\r\nexport const submitPost =( post, history)=>dispatch=>{\r\n        axios.post('/posts/create', post)\r\n            .then(post => {\r\n                if(post.data.success){\r\n                    dispatch({\r\n                        type: FETCH_POSTS,\r\n                        payload: {\r\n                            post: [post.data.post]\r\n                        }\r\n                    })\r\n                    history.push('/')\r\n                }else{\r\n                    dispatch({\r\n                        type: POST_ERROR,\r\n                        payload: post.data\r\n                    })\r\n                }               \r\n            })\r\n            .catch(err=>console.log(err)\r\n            )\r\n    \r\n    \r\n}\r\n\r\nexport const mypost =() => dispatch => {\r\n    axios.get('/posts/mypost')\r\n    .then(post=>{\r\n        dispatch({\r\n            type: MY_POST,\r\n            payload: post.data.post\r\n        })\r\n    })\r\n    .catch(err => console.log(err))\r\n\r\n}\r\n\r\nexport const likes = (id) => dispatch =>{\r\n    axios.put('/posts/like/'+id)\r\n    .then(post=>{\r\n        console.log(post.data);\r\n        dispatch({\r\n            type: FETCH_LIKE,\r\n            payload: post.data\r\n            \r\n        })\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nexport const unlikes = (id) => dispatch => {\r\n    axios.put('/posts/unlike/' + id)\r\n        .then(post => {\r\n            console.log(post.data);\r\n            dispatch({\r\n                type: FETCH_LIKE,\r\n                payload: post.data\r\n\r\n            })\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\nexport const deletePost = id => dispatch => {\r\n    axios.delete('/posts/delete/'+id)\r\n    .then(post=>{\r\n        dispatch({\r\n            type: DELETE_POST,\r\n            payload: post.data\r\n        })\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nexport const comment = (id, commentBody) => dispatch => {\r\n    axios.put('/posts/comment/'+id, commentBody)\r\n    .then(post => {\r\n            console.log(post.data);\r\n            dispatch({\r\n                type: FETCH_LIKE,\r\n                payload: post.data\r\n\r\n            })\r\n        })\r\n        .catch(err => console.log(err))\r\n\r\n}\r\n\r\nexport const deletecomment = (postid, commentId) => dispatch =>{\r\n    axios.patch(`/posts/comment/delete/${postid}/${commentId}`)\r\n    .then(post=>{\r\n        console.log(post);\r\n        dispatch({\r\n            type: FETCH_COMMENT,\r\n            payload: {\r\n                postId: postid,\r\n                commentArray: post.data\r\n            }\r\n        })\r\n    })\r\n    .catch(err=>console.log(err))\r\n}","export const REGISTER_USER = 'REGISTER_USER'\r\nexport const LOGIN_USER = 'LOGIN_USER'\r\nexport const FETCH_PROFILE = 'FETCH_PROFILE'\r\nexport const FETCH_POSTS = 'FETCH_POSTS'\r\nexport const LOG_OUT = 'LOG_OUT'\r\nexport const FETCH_PROFILEIMG = 'FETCH_PROFILEIMG'\r\nexport const MY_POST = 'MY_POST'\r\nexport const POST_ERROR = 'POST_ERROR'\r\nexport const FETCH_LIKE = 'FETCH_LIKE'\r\nexport const DELETE_POST = 'DELETE_POST'\r\nexport const FETCH_COMMENT = 'FETCH_COMMENT'","import * as Types from '../action/type'\r\nimport axios from 'axios'\r\nimport {setToken} from '../../util/setToken'\r\n\r\nexport const register = (user, history)=>dispatch=>{\r\n    axios.post('/users/register', user)\r\n    .then(user=>{\r\n        \r\n        dispatch({\r\n            type: Types.REGISTER_USER,\r\n            payload: user.data\r\n        })\r\n\r\n        if (user.data.message === 'Register successfull') {\r\n            history.push('/login')\r\n        }\r\n        //\r\n        \r\n    })\r\n    .catch(err=>console.log(err)\r\n    )\r\n    \r\n}\r\n\r\nexport const login = (user, history) => dispatch =>{\r\n    axios.post('/users/login', user)\r\n    .then(res=>{\r\n        \r\n        const token = res.data\r\n\r\n        if(res.data.success){\r\n            localStorage.setItem('auth-token', token.token)\r\n            dispatch({\r\n                type: Types.LOGIN_USER,\r\n                payload: {\r\n                    user: res.data.user,\r\n                    error: {}\r\n                }\r\n            })\r\n            setToken()\r\n            fetchProfile()\r\n            history.push('/')\r\n        }else{\r\n            dispatch({\r\n                 type: Types.LOGIN_USER,\r\n                     payload: {\r\n                         user:{},\r\n                         error: res.data\r\n                     }\r\n            })\r\n        }\r\n        \r\n    })\r\n    .catch(err=>console.log(err)\r\n    )\r\n}\r\n\r\nexport const fetchProfile = () =>dispatch=>{\r\n    axios.get('/users/profile')\r\n    .then(user=>{\r\n        dispatch({\r\n            type: Types.FETCH_PROFILEIMG,\r\n            payload: user.data.profile\r\n        })\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\n","import * as Types from '../action/type'\r\nimport { register } from '../action/authAction'\r\n let init = {\r\n    user: {},\r\n    profileImg: '',\r\n    error: {\r\n        login:{},\r\n        register:{}\r\n    },\r\n    isAuthenticated: false\r\n}\r\n\r\nfunction authReducers(state=init, action){\r\n    switch (action.type) {\r\n        case Types.REGISTER_USER:\r\n            return{\r\n                ...state,\r\n                error: {...state.error, register: action.payload}\r\n            }\r\n        case Types.LOGIN_USER:\r\n            return{\r\n                user: action.payload.user,\r\n                error: {...state.error, login: action.payload.error},\r\n                isAuthenticated: Object.keys(action.payload.user).length !== 0\r\n            }\r\n        case Types.FETCH_PROFILE:\r\n            return{\r\n                ...state,\r\n                user: action.payload,\r\n                isAuthenticated: Object.keys(action.payload).length !== 0\r\n            }\r\n        case Types.LOG_OUT:\r\n            return{\r\n                user: {},\r\n                error: {\r\n                    login: {},\r\n                    register: {}\r\n                },\r\n                isAuthenticated: false\r\n            }\r\n        case Types.FETCH_PROFILEIMG:\r\n            return{\r\n                ...state,\r\n                profileImg: action.payload\r\n            }\r\n            \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducers","import * as Types from '../action/type'\r\n\r\nlet init = {\r\n    post: [],\r\n    mypost: [],\r\n    error: {},\r\n}\r\n\r\nfunction postReducer(state=init, action){\r\nswitch (action.type) {\r\n    case Types.FETCH_POSTS:\r\n        return{\r\n            ...state,\r\n            post: [ ...action.payload.post],\r\n            error: {}\r\n        }\r\n    case Types.MY_POST:\r\n        return{\r\n            ...state,\r\n            mypost: action.payload\r\n        }\r\n    case Types.POST_ERROR:\r\n        return{\r\n            ...state,\r\n            error: action.payload\r\n        }\r\n    case Types.FETCH_LIKE:\r\n        let index = state.post.findIndex(post=>post._id === action.payload._id)\r\n        state.post[index] = action.payload \r\n        return{\r\n            ...state\r\n        }\r\n    case Types.DELETE_POST:\r\n        let indexpost = state.post.findIndex(post=>post._id === action.payload._id)\r\n        state.post.splice(indexpost, 1)\r\n        return{\r\n            ...state\r\n        }\r\n    case Types.FETCH_COMMENT:\r\n        let indexpostcomment = state.post.findIndex(post=>post._id === action.payload.postId)\r\n        state.post[indexpostcomment].comment = action.payload.commentArray\r\n        return{\r\n            ...state\r\n        }\r\n    default:\r\n        return state\r\n}\r\n}\r\n\r\nexport default postReducer","import {combineReducers} from 'redux'\r\nimport authReducers from './authReducers'\r\nimport postReducer from './postReducer'\r\nlet rootReducers = combineReducers({\r\n    auth: authReducers,\r\n    post: postReducer\r\n})\r\n\r\nexport default rootReducers","import {createStore, applyMiddleware, compose} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducers from './reducers/rootReducer'\r\n\r\nconst middleware = [thunk]\r\n\r\nlet store = createStore(rootReducers, compose(\r\n    applyMiddleware(...middleware)\r\n     // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n))\r\n\r\nexport default store","import React, {useEffect, useState} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport{connect} from 'react-redux'\r\nimport {fetchProfile} from '../../store/action/authAction'\r\nimport {mypost} from '../../store/action/postAction'\r\nimport axios from 'axios'\r\nimport store from '../../store'\r\nimport * as Types from '../../store/action/type'\r\n\r\nimport {Spinner} from 'react-bootstrap'\r\n\r\nfunction Home(props) {\r\nconst [name, setName] = useState('')\r\nconst [email, setEmail] = useState('')\r\nconst [isLogged, setIsLogged] = useState(false)\r\nconst [profile, setProfile] = useState('')\r\nconst [profileImg, setProfileImg] = useState('')\r\nconst [message , setMessage] = useState('')\r\n\r\n\r\nuseEffect(()=>{\r\n    setTimeout(() => {\r\n        setMessage('')\r\n    }, 2000);\r\n},[message])\r\n\r\nuseEffect(()=>{\r\n    setProfile(props.user.profileImg)\r\n}, [props.user.profileImg])\r\n\r\n useEffect(()=>{\r\n     setName(props.user.user.name)\r\n     setEmail(props.user.user.email)\r\n     setIsLogged(props.user.isAuthenticated ? true: false)\r\n\r\n }, [props.user.user])\r\n\r\n\r\nlet history = useHistory()\r\n\r\nconst changeProfileImage = (event) => {\r\n    \r\n    setProfileImg(event.target.files[0])\r\n}\r\n\r\nconst submitProfile = (e) => {\r\n    e.preventDefault()\r\n    const formData = new FormData()\r\n    formData.append('profile', profileImg)\r\n\r\n    axios.put('/users/profile', formData)\r\n        .then(user => {\r\n            \r\n            setMessage(user.data.message)\r\n            if(user.data.success){\r\n                 store.dispatch({\r\n                     type: Types.FETCH_PROFILEIMG,\r\n                     payload: user.data.user.profile\r\n                 })\r\n            }\r\n           \r\n            \r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\nuseEffect(() => {\r\n    props.fetchProfile()\r\n    props.mypost()\r\n},[])\r\n\r\n    return (\r\n        <div className='container'>   \r\n        \r\n          {\r\n              (message !== '') ? <p className='text-danger'>{message}</p> : null             \r\n          }  \r\n        \r\n        <div className='row mt-5'>\r\n            <div className='col-6'>\r\n                <img className='imgh' src={profile}></img>\r\n                <form encType='multipart/form-data' method='post' onSubmit={submitProfile} className='my-3'>\r\n                    <div className='form-group'>\r\n                        <input type='file' className='form-control-file' name='profile' onChange={changeProfileImage}></input>\r\n                        <button type='submit' className='btn btn-primary my-3'>\r\n                        Change Picture\r\n                        {/* {profile == profileImg &&\r\n                        <Spinner animation='border'/>\r\n                        } */}\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div className='col-6'>\r\n                  {\r\n                (isLogged) ? <div>\r\n                <p>name: {name}</p>\r\n                <p>Email: {email}</p>\r\n                 \r\n                  </div> :<button onClick={()=>{\r\n                      history.push('/login')\r\n                  }}>login</button>}\r\n            </div>\r\n        </div> \r\n        \r\n          <hr/>\r\n\r\n          \r\n\r\n        \r\n\r\n\r\n          { (props.post.mypost.length > 0) ?\r\n              props.post.mypost.map(post=>{\r\n              return(\r\n                  <div key={post._id} className='card my-3'>\r\n                  <div className='card-body'>\r\n                  Posted By: <strong>{post.postedBy.name}</strong> \r\n                  {\r\n                    (post.photo !== 'no photo')?\r\n                    <img src={post.photo} className='card-image-top postimg'></img> : null\r\n                    }\r\n                   <h5>{post.title}</h5>\r\n                   <p>{post.body}</p>\r\n                   </div>\r\n                  </div>\r\n              )\r\n          }):\r\n           <p>No posts found\r\n           <Spinner animation='border' /></p>\r\n          }\r\n\r\n          \r\n            \r\n        </div>\r\n    )\r\n}\r\nlet mapStateToProps = state => ({\r\n    user: state.auth,\r\n    post: state.post\r\n})\r\nexport default connect(mapStateToProps,{fetchProfile, mypost})(Home)","import React, { useState, useEffect } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {login} from '../../store/action/authAction'\r\n\r\n function Login(props) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [error, setError] = useState({})\r\n   \r\n    const data = (e)=>{\r\n        e.preventDefault()\r\n        let user = {\r\n            email,\r\n            password,\r\n        }\r\n       \r\n        props.login(user, props.history)\r\n        \r\n       \r\n    }\r\n    useEffect(()=>{\r\n        setError(props.user.error.login)\r\n    }, [props.user.error.login])\r\n    return (\r\n        <div className='container'>\r\n        <div className='row'>\r\n            <div className='col-md-8 offset-md-2 card mt-5 p-3'>\r\n                <form onSubmit={data}>\r\n            <h1 className='display-4 text-center'>Login Here</h1>\r\n            {\r\n                        (error.message == null) ? null :\r\n                         <p className='text-danger'>{error.message}</p>\r\n                    }\r\n                \r\n                <div className='form-group'>\r\n                    <label>email</label>\r\n                    <input onChange={(e)=>setEmail(e.target.value)} type='text' className='form-control'></input>\r\n                    {\r\n                        (error.email == null) ?\r\n                        null: \r\n                         <p className='text-danger'>{error.email}</p>\r\n                    }\r\n                   \r\n                </div>\r\n                <div className='form-group'>\r\n                    <label>Password</label>\r\n                    <input onChange={(e)=>setPassword(e.target.value)} type='password' className='form-control'></input>\r\n                    {\r\n                        (error.password == null) ? null :\r\n                         <p className='text-danger'>{error.password}</p>\r\n                    }\r\n                </div>\r\n                \r\n                <button type='submit' className='btn btn-primary'>Login</button>\r\n            </form>\r\n            </div>\r\n        </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\nconst mapStatesToProps = state => ({\r\n    user: state.auth\r\n})\r\nexport default connect(mapStatesToProps,{login})(Login)","import axios from 'axios'\r\nexport let setToken= () => {\r\n    let token = localStorage.getItem('auth-token')\r\n    if(token){\r\n        axios.defaults.headers.common['Authorization'] = token\r\n    }else{\r\n        axios.defaults.headers.common['Authorization'] = ''\r\n    }\r\n}","import React, { useState , useEffect} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {register} from '../../store/action/authAction'\r\n\r\n function Register(props) {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [error, setError] = useState({})\r\n   \r\n    const data = (e)=>{\r\n        e.preventDefault()\r\n        let user = {\r\n            name,\r\n            email,\r\n            password,\r\n            confirmPassword\r\n        }\r\n       \r\n        props.register(user, props.history)     \r\n        \r\n    }\r\n    useEffect(() => {\r\n        setError(props.user.error.register)\r\n    },[props.user.error.register])\r\n    return (\r\n        <div className='container'>\r\n        <div className='row'>\r\n            <div className='col-md-8 offset-md-2 card mt-5 p-3'>\r\n                <form onSubmit={data}>\r\n            <h1 className='display-4 text-center'>Register Here</h1>\r\n            {\r\n                error.message &&\r\n                <p className='text-danger'>{error.message}</p>\r\n            }\r\n                <div className='form-group'>\r\n                    <label>Name</label>\r\n                    <input onChange={(e)=>setName(e.target.value)} type='text' className='form-control'></input>\r\n                    <p className='text-danger'>{error.name}</p>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label>email</label>\r\n                    <input onChange={(e)=>setEmail(e.target.value)} type='text' className='form-control'></input>\r\n                    <p className='text-danger'>{error.email}</p>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label>Password</label>\r\n                    <input onChange={(e)=>setPassword(e.target.value)} type='password' className='form-control'></input>\r\n                    <p className='text-danger'>{error.password}</p>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label>Confirm Password</label>\r\n                    <input onChange={(e)=>setConfirmPassword(e.target.value)} type='password' className='form-control'></input>\r\n                    <p className='text-danger'>{error.confirmPassword}</p>\r\n                </div>\r\n                <button type='submit' className='btn btn-primary'>Register</button>\r\n            </form>\r\n            </div>\r\n        </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\nconst mapStatesToProps = state => ({\r\n    user: state.auth\r\n})\r\nexport default connect(mapStatesToProps,{register})(Register)","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport store from '../store'\r\nimport * as Types from '../store/action/type'\r\nimport axios from 'axios'\r\n\r\n\r\nfunction Navbar(props) {\r\n    let history = useHistory()\r\n     const clearStorage = () => {\r\n         localStorage.clear()\r\n         history.push('/login')\r\n         store.dispatch({\r\n           type: Types.LOG_OUT\r\n         })\r\n         axios.defaults.headers.common['Authorization'] = ''\r\n     }\r\n    return (\r\n        <nav className=\"navbar navbar-expand navbar-dark bg-primary\">\r\n  <Link to='/' className=\"navbar-brand\">\r\n        Instagram\r\n  </Link>\r\n  \r\n  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <ul className=\"navbar-nav mr-auto\">\r\n      \r\n      {\r\n          (!props.user.isAuthenticated) &&\r\n          <>\r\n                <li className=\"nav-item\">\r\n        <Link className=\"nav-link mr-0\" to='/login'>Login</Link>\r\n      </li>\r\n     \r\n      <li className=\"nav-item\">\r\n        <Link className=\"nav-link mr-0\" to='/register'>Register</Link>\r\n      </li>\r\n          </>\r\n      }\r\n\r\n      {\r\n          (props.user.isAuthenticated) &&\r\n          <>\r\n          <li className=\"nav-item \">\r\n        <Link className=\"nav-link \" to='/profile'>Profile</Link>\r\n      </li>\r\n      <li className=\"nav-item \">\r\n        <Link className=\"nav-link \" to='/post'>Create Post</Link>\r\n      </li>\r\n             <li className=\"nav-item\">\r\n        <button onClick={clearStorage} className=\"btn btn-danger btn-sm\" to='/register'>Logout</button>\r\n      </li> \r\n          </>\r\n      }\r\n      \r\n    </ul>\r\n    \r\n  </div>\r\n</nav>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = state =>({\r\n    user: state.auth\r\n})\r\nexport default connect(mapStateToProps)(Navbar)\r\n","import React, { useState, useEffect } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {submitPost} from '../../store/action/postAction'\r\n\r\n function CreatePost(props) {\r\n    let history = useHistory()\r\n    const [title, setTitle] = useState('')\r\n    const [body, setBody] = useState('')\r\n    const [photo, setPhoto] = useState('')\r\n    const [error, setError] = useState({})\r\n   \r\n    const postData = (e)=>{\r\n        e.preventDefault()\r\n        let formData = new FormData()\r\n        formData.append('title', title)\r\n        formData.append('body', body)\r\n        formData.append('photo', photo)               \r\n        props.submitPost(formData, history)\r\n    }\r\n\r\nuseEffect(()=>{\r\n    setError(props.post.error)\r\n},[props.post.error])\r\n    return (\r\n        <div className='container'>\r\n        <div className='row'>\r\n            <div className='col-md-8 offset-md-2 card mt-5 p-3'>\r\n                <form onSubmit={postData} encType='multipart/form-data'>\r\n            <h1 className='display-4 text-center'>Post</h1>\r\n            <p className='text-danger'>{error.message}</p>\r\n                \r\n                <div className='form-group'>\r\n                    <label>title</label>\r\n                    <input name='title' onChange={(e)=>setTitle(e.target.value)} type='text' className='form-control'></input>\r\n                    \r\n                </div>\r\n                <div className='form-group'>\r\n                    <label>Body</label>\r\n                    <input name='body' onChange={(e)=>setBody(e.target.value)} type='text' className='form-control'></input>\r\n                    \r\n                </div>\r\n                <div className='form-group'>\r\n                    <label>Photo</label>\r\n                    <input onChange={(e)=>setPhoto(e.target.files[0])} type='file' name='photo' className='form-control-file'></input>\r\n                    \r\n                </div>\r\n                \r\n                <button type='submit' className='btn btn-primary'>Submit Post</button>\r\n            </form>\r\n            </div>\r\n        </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\nlet mapStateToProps = state => ({\r\n    post: state.post\r\n})\r\nexport default connect(mapStateToProps, {submitPost})(CreatePost)\r\n\r\n\r\n","import React from 'react';\nimport './App.css';\nimport Home from './components/screen/Home'\nimport Profile from './components/screen/Profile'\nimport Login from './components/screen/Login'\nimport  Register from './components/screen/Register'\nimport {BrowserRouter,Route,Switch} from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Navbar from './components/Navbar'\nimport CreatePost from './components/screen/Post'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <Navbar />\n      <Switch>\n        <Route exact path='/' component={Home} />\n        <Route  path='/profile' component={Profile} />\n        <Route path='/login' component={Login} />\n        <Route path='/register' component={Register} />\n        <Route path='/post' component={CreatePost} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux'\nimport store from './store'\nimport * as Types from './store/action/type'\nimport axios from 'axios'\nimport jwt from 'jsonwebtoken'\n\n \nlet token = localStorage.getItem('auth-token')\n\n if(token){ \n   \n  jwt.verify(token, 'SECRET', (err, decode) => {\n    if (decode === undefined) {\n     return localStorage.clear()\n    }\n    axios.defaults.headers.common['Authorization'] = token\n\n    axios.get('/users/' + decode._id)\n      .then(user => {\n        store.dispatch({\n          type: Types.FETCH_PROFILE,\n          payload: user.data\n        })\n      })\n      .catch(err => console.log(err))\n  })\n   \n }else{\n   axios.defaults.headers.common['Authorization'] = ''\n }\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}